---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import AvatarComponent from '../components/AvatarComponent.tsx'
import { Separator } from '@/components/ui/separator';

import '@/styles/globals.css';
import { ExternalLink, MapPinCheck, Notebook } from 'lucide-react';
---

<Layout title="shezcode">
  <Separator />
	<main class="w-[935px] flex flex-col mt-8 gap-4">
    <div class="flex flex-row items-center gap-4 self-start n">
      <h1 class="scroll-m-20 text-2xl font-extrabold tracking-tight lg:text-3xl text-left">
        shezcode
      </h1> 
      <AvatarComponent client:load />
    </div>
    <Separator />
    <div class="flex flex-col gap-2">
      <div class="flex flex-row items-center gap-4">
        <MapPinCheck />
        <h2 class="scroll-m-20 text-lg font-medium tracking-tight">Spain</h3>
      </div>
      <div class="flex flex-row items-center gap-4">
        <Notebook />
        <h2 class="scroll-m-20 text-lg font-medium tracking-tight">Web dev @ San Valero</h3>
      </div>
      <div class="flex flex-row items-center gap-4">
        <ExternalLink />
        <a href="https://github.com/shezcode" class="scroll-m-20 text-lg font-medium tracking-tight underline">Github</h3>
      </div>
    </div>
    <div class="flex flex-row items-center justify-between border-[0.5px] border-stone">
      <div id="blog" class="">
        <h2 class="scroll-m-20 text-lg font-medium tracking-tight">Blog</h3>
        <Separator />
        <p>WIP</p>
      </div>
      <Separator orientation="vertical" className="h-20"/>
      <div id="projects" class="text-right">
        <h2 class="scroll-m-20 text-lg font-medium tracking-tight">Projects</h3>
        <Separator />
        <p>WIP</p>
      </div>
    </div>
	</main>
</Layout>

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
